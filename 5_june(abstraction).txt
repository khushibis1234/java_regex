hoclass A :abs 
	method :abs :no return and no argument 

class B ex A 

class Main 
main method :access 

abstract class A{
      abstract void show();

    }
    class B extends A{
       void show(){
           int a=67;
           System.out.println(a);
       }
    }
    public class Main{
    public static void main(String[] args){
        B p=new B();
        p.show();
    }
} 
--------------------------------------------
class A :abs 
	method :abs : return and no argument 

class B ex A 

class Main 
main method :access 
abstract class A{
    abstract int show();
}
class B extends A{
    int show()
    {
        return 45;
    }
}
public class Main
{
    public static void main(String[] args)
    {
        B b=new B();
        System.out.println("a="+(b.show()));
    }
}

--------------------------------------------
class A :abs 
	method :abs :no return and  argument 

class B ex A 

class Main 
main method :access 

abstract class A{
    abstract int show(int a);
}
class B extends A{
    int show(int a) {
        System.out.println(a);
    }
}
public class Main
{
    public static void main(String[] args)
    {
        B b=new B();
        System.out.println(78);
    }
}
--------------------------------------------
class A :abs 
	method :abs : return and  argument 

class B ex A 

class Main 
main method :access 
abstract class A{
    abstract int show(int a);
}
class B extends A{
    int show(int a) {
        System.out.println(a);
        return a;
    }
}
public class Main
{
    public static void main(String[] args)
    {
        B b=new B();
        System.out.println(78);
    }
}

--------------------------------------------
class A :abs 
	method :abs : return and  argument 


class Main ex A
 main method :access 
abstract class A
{
    abstract int show(int a,int b);
}
public class Main extends A
{
    int show(int a,int b){
        System.out.println("a="+a);
        System.out.println("b="+b);
        int c=a-b;
        return c;
    }
    public static void main(String[] args)
    {
        Main b=new Main();
        int s=b.show(800,620);
        System.out.println("sub="+s);
    }
}
--------------------------------------------
class College :abstract 
	method1 :mid term exam :abstract :no return and no argument  
	method2 :main term exam :abstract : return and no argument  

	method3 :fairwell :abstract :no return and  argument  

	method4 :fresherParty :abstract : return and  argument  


class Students ex College 

Main class :access 
-------------------------------------------------------
class A :abstract 
	add() :no return and no argument :abstract 

class B :abstract 
	sub() :no return and  argument :abstract 


class C :abstract 
	div() : return and no argument :abstract 


class D :abstract 
	multi() : return and  argument :abstract

class E

class F

class G

class H
extends one by one 

class Main 
main method access 
------------------------------------------------------------ 
class A :abstract 
	add() :no return and no argument :abstract 

class B :abstract 
	sub() : return and  argument :abstract 

class E ex B
method 

class F ex A
method 

class G ex E
method 

class H ex F 
method 

class Main 
main method access 
------------------------------------------------------------ 
class College :abstract 
	method1 :mid term exam :abstract :no return and no argument  
	method2 :main term exam :non-abstract : return and no argument  

	method3 :fairwell :abstract :no return and  argument  

	method4 :fresherParty :non-abstract : return and  argument  


class Students ex College 

Main class :access 
import java.util.*;
abstract class College{
    abstract void method1();
    abstract int method2();
    abstract void method3(int a);
    abstract int method4(int x,int y);
}
class Student extends College{
    void method1(){
        System.out.println("mid term exam marks.");
        Scanner sc=new Scanner(System.in);
        System.out.print("hindi=");
        int hindi=sc.nextInt();
        System.out.print("english=");
        int english=sc.nextInt();
        System.out.print("maths=");
        int maths=sc.nextInt();
        System.out.print("computer=");
        int computer=sc.nextInt();
        int d=hindi+english+maths+computer;
        System.out.println("total marks of mid term exam marks.-"+d);
    }
    int method2(){
        System.out.println("main exam marks.");
        Scanner sc=new Scanner(System.in);
        System.out.print("hindi=");
        int hindi=sc.nextInt();
        System.out.print("english=");
        int english=sc.nextInt();
        System.out.print("maths=");
        int maths=sc.nextInt();
        System.out.print("computer=");
        int computer=sc.nextInt();
        int c=hindi+english+maths+computer;
        return c;
    }
    void method3(int a){
        System.out.println("fairwell entry fees="+a);
    }
    int method4(int x,int y){
        System.out.println("fresherParty ticket price. "+x);
        System.out.println("entry fees."+y);
        int t=x+y;
        return t;
    }
}
public class Main{
    public static void main(String[] args){
        Student s=new Student();
        s.method1();
        System.out.println("total marks of main exam. "+(s.method2()));
        s.method3(500);
        System.out.println("Total payment of fresherParty."+(s.method4(500,300)));
    }
}
------------------------------------------------------
class A :abstract 
	method1 :non-abstract method :return and argument 
	method 2 :abstract method :covariant 

class B ex A
method 

class C ex B 
method 

class D ex A 
method 

class Main 
main method access 
------------------------------------------------------
class A :abstract 
	method:return and argument :non-abstract type 

class B :abstract 
	method:return and argument :abstract type 

class C ex A

class D ex B 

Main :access 
---------------------------------------------------
class A :abstract 
	method:return and argument :abstract type 

class D ex A 

Main :access 
parent class object and child ka constructor call krna hey 
---------------------------------------------------
class A :abstract 
	method:no return and argument :abstract type 

class D ex A 

Main :access 
parent class object and child ka constructor call krna hey 

---------------------------------------------------
class A :abstract 
	method:no return and no argument :abstract type 

class D ex A 

Main :access 
parent class object and child ka constructor call krna hey 



